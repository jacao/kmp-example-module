workflows:
    gradle-build: # Example of a building an publishing artifacts workflow
      name: Gradle
      instance_type: mac_mini # To build swift packages we need a MacOS instance
      environment:
        vars: # Environment variables that have been encrypted using CodeMagics encryption service
          AWS_ACCESS_KEY_ID: Encrypted(Z0FBQUFBQmd3T25adXpUNjFEdTB4cUlsdFJPLVFPZU5VQXVLZHprS01HYlZCcy1ONS0wSUNOLVVkSnR1TXY2T29ub0JKbldyN0o3VU03bFhIbWkxbU1fSU0yc0hVeG5QNGhFbUx0ZnVsUDhadWUtcEFRejFtdGM9)
          AWS_REGION: eu-west-1
          AWS_SECRET_ACCESS_KEY: Encrypted(Z0FBQUFBQmd3T29MSWpJeHFvMXkwYlRncnYyM25rMkU0UWRDZTJkN3F4czcwSG9EbEN5VlVTaVFxTVU2ZGgxUjQzSTdzN1lOb3dkelNEQjFkSjg4OTROS3k0blA1akV5a0tKWjdPOS01TDRuVTI3NGoyOHF3Qkh5a2NYeGE5VU9OelN1NnZXT0Y0MEQ=)
      scripts:
        - name: Run unit tests
          script: ./gradlew KMPExampleModule:check # This command runs all the unit tests (commonTest, androidTest, iosTest)
        - name: Create swift package
          script: ./gradlew createSwiftPackage # Command that builds the swift package framework binary and zip
        - name: Upload binary to s3
          script: | # Script to put zipped framework binary in the unidays-app-dependencies bucket
            sudo pip3 install awscli --upgrade
            ls
            aws s3 sync ./KMPExampleModule/swiftpackage/ s3://unidays-app-dependencies/ios/KMPExampleModule --exclude '*' --include '*.zip' --exclude '*/*'
      artifacts: # Gives us access to the artifact file generated in CodeMagic
        - KMPExampleModule/swiftpackage/*.zip
    test-pull-request: # Example of running tests against a PR workflow
      name: Test Pull Request
      instance_type: mac_mini
      triggering: # Specify which webhook events trigger this workflow to run
        events:
          - pull_request
        branch_patterns:
          - pattern: '*'
            include: true
            source: true
      scripts:
        - name: Run unit tests
          script: ./gradlew KMPExampleModule:check # This command runs all the unit tests (commonTest, androidTest, iosTest)
